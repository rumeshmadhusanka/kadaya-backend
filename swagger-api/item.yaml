swagger: "2.0"
info:
  title: Kadaya Backend API Documentation
  version: 1.0.0
host: localhost:3000
schemes:
  - http
tags:
  - name: Shop
    description: Shop
  - name: Buyer
    description: Buyer
  - name: Category
    description: Category
  - name: Image
    description: Image
  - name: Item
    description: Item
  - name: Monitoring
    description: Monitoring
  - name: Order
    description: Order
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: x-access-token
paths:
  /item/:
    get:
      security:
        - ApiKeyAuth: []
      summary: Get all items
      tags:
        - Item
      consumes:
        - application/json
      responses:
        200:
          description: OK
        502:
          description: Server Error
    post:
      security:
        - ApiKeyAuth: []
      summary: Add new Item
      tags:
        - Item
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: json body
          schema:
            type: object
            required:
              - shop_id
              - name
              - price
            properties:
              shop_id:
                type: string
                example: 26c2a01a-ff93-4a30-ac1e-e1da49abc7d5
              name:
                type: string
              description:
                type: string
              amount_available:
                type: integer
              price:
                type: number
              photo_id:
                type: string
              unit:
                type: string
      responses:
        201:
          description: Created
        400:
          description: Not Found
        502:
          description: Server Error
  /item/{id}:
    put:
      security:
        - ApiKeyAuth: []
      summary: Update Item
      tags:
        - Item
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          required: true
          type: string
          name: id
        - in: body
          name: user
          description: json body
          schema:
            type: object
            required:
              - name
              - price
            properties:
              name:
                type: string
              description:
                type: string
              amount_available:
                type: number
              price:
                type: number
              unit:
                type: string
      responses:
        201:
          description: Created
        400:
          description: Not Found
        502:
          description: Server Error
    delete:
      security:
        - ApiKeyAuth: []
      summary: Delete Item
      tags:
        - Item
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
        502:
          description: Server Error
  /item/shop/{shop_id}:
    get:
      security:
        - ApiKeyAuth: []
      summary: Get all items
      tags:
        - Item
      consumes:
        - application/json
      parameters:
        - name: shop_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
        502:
          description: Server Error
  /item/search/:
    get:
      security:
        - ApiKeyAuth: []
      summary: Search items
      tags:
        - Item
      consumes:
        - application/json
      parameters:
        - name: keyword
          in: query
          required: true
          type: string
      responses:
        200:
          description: OK
        502:
          description: Server Error
  /item/{id}/amount/{value}:
    put:
      security:
        - ApiKeyAuth: []
      summary: Update Item's available amount
      tags:
        - Item
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: path
          name: value
          type: number
          required: true
      responses:
        200:
          description: Created
        400:
          description: Not Found
        502:
          description: Server Error


