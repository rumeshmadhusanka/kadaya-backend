swagger: "2.0"
info:
  title: Kadaya Backend API Documentation
  version: 1.0.0
host: localhost:3000
schemes:
  - http
tags:
  - name: Shop
    description: Shop
  - name: Buyer
    description: Buyer
  - name: Category
    description: Category
  - name: Image
    description: Image
  - name: Item
    description: Item
  - name: Monitoring
    description: Monitoring
  - name: Order
    description: Order
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: x-access-token
paths:
  /order/buyer/{buyer_id}/ongoing:
    get:
      summary: Get ongoing orders for a buyer
      tags:
        - Order
      parameters:
        - in: path
          required: true
          name: buyer_id
          type: string
      consumes:
        - application/json
      responses:
        200:
          description: OK
        502:
          description: Server Error

  /oder/buyer/{buyer_id}/history:
    get:
      summary: Get order history for a buyer
      tags:
        - Order
      parameters:
        - in: path
          required: true
          name: buyer_id
          type: string
      consumes:
        - application/json
      responses:
        200:
          description: OK
        502:
          description: Server Error

  /order/shop/{shop_id}/ongoing:
    get:
      summary: Get order history for a shop
      tags:
        - Order
      parameters:
        - in: path
          required: true
          name: shop_id
          type: string
      consumes:
        - application/json
      responses:
        200:
          description: OK
        502:
          description: Server Error

  /order/shop/{shop_id}/history:
    get:
      summary: Get order history for a shop
      tags:
        - Order
      parameters:
        - in: path
          required: true
          name: shop_id
          type: string
      consumes:
        - application/json
      responses:
        200:
          description: OK
        502:
          description: Server Error
  /order/:
    post:
      summary: Add new Order
      tags:
        - Order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: json body
          schema:
            type: object
            required:
              - buyer_id
              - shop_id
              - total_price
              - items_list
            properties:
              message_body:
                type: string
              buyer_id:
                type: string
                example: 0fc38e1b-01ea-4d7d-95f2-75f0c0ff4136
              shop_id:
                type: string
                example: 3cb763b9-548f-4161-a92f-72f48d0bd693
              total_price:
                type: number
              items_list:
                type: array
                description: items list
                items:
                  required:
                    - item_id
                    - amount
                  properties:
                    item_id:
                      type: string
                      example: 29c58574-d509-4150-81e3-790dcd28ea35
                    amount:
                      type: number
      responses:
        201:
          description: Updated
        400:
          description: Not Found
        502:
          description: Server Error
  /order/{id}:
    delete:
      summary: Delete an order
      tags:
        - Order
      parameters:
        - in: path
          required: true
          name: id
          type: string
      consumes:
        - application/json
      responses:
        200:
          description: OK
        502:
          description: Server Error
    put:
      summary: Update order status
      tags:
        - Order
      parameters:
        - in: path
          required: true
          name: id
          type: string
        - in: body
          name: user
          description: json body
          schema:
            type: object
            required:
              - state
            properties:
              state:
                type: string
                example: COMPLETED
      consumes:
        - application/json
      responses:
        200:
          description: OK
        502:
          description: Server Error

